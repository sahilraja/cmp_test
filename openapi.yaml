openapi: 3.0.0
info:
  version: 1.0.0
  title: 'CMP API''s '

servers:
  - url: 'http://localhost:3000'
  - url: ' http://192.168.1.173:3000'
  
paths:

  '/role/capabilities/add':
    post:
      tags:
        - RBAC
      summary: Add capability to role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - capability
                - action
              properties:
                scope:
                  type: string
                  example: Project Name ( howrah )
                  description: default global scope
                role:
                  type: string
                  example: Project manager
                capability:
                  type: string
                  example: document
                action:
                  type: string
                  example: read
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'

  '/role/capabilities/remove':
    put:
      tags:
        - RBAC
      summary: Remove capability to role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - capability
                - action
              properties:
                scope:
                  type: string
                  example: Project Name ( howrah )
                  description: default global scope
                role:
                  type: string
                  example: Project manager
                capability:
                  type: string
                  example: document
                action:
                  type: string
                  example: howrah
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/role/capabilities/list':
    get:
      summary: Get scope capabilities
      tags:
        - RBAC
      parameters:
        - in: query
          name: scope
          schema:
            type: string
            example: howrah (project name)
          description: default global scope
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'

  '/user/roles/{id}':
    get:
      summary: Get user roles
      tags:
        - RBAC
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
        - in: query
          name: project
          schema:
            type: string
          description: scope project or global
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'

  '/user/role/add/{id}':
    post:
      summary: Add role to user
      tags:
        - RBAC
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - scope
              properties:
                role:
                  type: string
                  example: project manager
                scope:
                  type: string
                  example: howrah (project name or global)
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'

  '/user/role/revoke/{id}':
    put:
      summary: rovoke role to user
      tags:
        - RBAC
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - scope
              properties:
                role:
                  type: string
                  example: project manager
                scope:
                  type: string
                  example: howrah (project name or global)
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'

  '/user/invite':
    post:
      summary: invite users
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - email
                - username
              properties:
                role:
                  type: string
                  example: project manager
                username:
                  type: string
                  example: jeevan balla
                email:
                  type: string
                  example: Jeevan.balla@transerve.com
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/user/register':
    post:
      summary: register user with that role
      tags:
        - USERS
      requestBody:
        required: true
        content:
          multipart/form-data::
            schema:
              type: object
              required:
                - first_name
                - last_name
                - phone
                - upload_photo
                - about_me
                - password
              properties:
                first_name:
                  type: string
                  example: jeevan
                last_name:
                  type: string
                  example: balla
                phone:
                  type: number
                  example: 7989238348
                upload_photo:
                  type: string
                  format: binary
                about_me:
                  type: string
                  example: "project manager for transerve"
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/user/login':
    post:
      summary: login for user
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: jeevan.balla@transerve.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/user/forgot':
    post:
      summary: user forgot password
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: jeevan.balla@transerve.com
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/user/forgot/password/':
    post:
      summary: user set password
      tags:
        - USERS
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/project/city/code/add':
    post:
      summary: add city code
      tags:
        - PROJECT
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - citycode
                - cityname
              properties:
                citycode:
                  type: string
                  example: CITIIS-OR-BBR
                cityname:
                  type: string
                  example: vizag
                description:
                  type: string
                  example: project for develop schools
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/project/city/code/edit/{id}':
    post:
      summary: edit city code
      tags:
        - PROJECT
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: code _id
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - citycode
                - cityname
              properties:
                citycode:
                  type: string
                  example: CITIIS-OR-BBR
                cityname:
                  type: string
                  example: vizag
                description:
                  type: string
                  example: project for develop schools
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
         
  '/project/city/code/status/{id}':
    put:
      summary: active or inactive city code
      tags:
        - PROJECT
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: code _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/project/city/code/list':
    get:
      summary: city code list
      tags:
        - PROJECT
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/role/add':
    post:
      summary: add role
      tags:
        - ROLE
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - description
              properties:
                role:
                  type: string
                  example: project manager
                description:
                  type: string
                  example: project manager for vizag
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/role/edit/{id}':
    post:
      summary: edit role
      tags:
        - ROLE
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: role _id
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: project manager
                description:
                  type: string
                  example: project manager for vizag
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
         
  '/role/status/{id}':
    put:
      summary: active or inactive role
      tags:
        - ROLE
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: role _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/role/list':
    get:
      summary: get role list
      tags:
        - ROLE
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/project/tag/add':
    post:
      summary: add tag
      tags:
        - TAG
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tag
              properties:
                tag:
                  type: string
                  example: document
                description:
                  type: string
                  example: document for vizag project
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/project/tag/edit/{id}':
    post:
      summary: edit tag
      tags:
        - TAG
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: tag _id
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  example: document
                description:
                  type: string
                  example: document for vizag project
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
         
  '/project/tag/status/{id}':
    put:
      summary: active or inactive tag
      tags:
        - TAG
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: tag _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/project/tag/list':
    get:
      summary: get tags list
      tags:
        - TAG
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/project/theme/add':
    post:
      summary: add theme
      tags:
        - THEME
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - theme
              properties:
                theme:
                  type: string
                  example: dams
                description:
                  type: string
                  example: dam for vizag 
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
          
  '/project/theme/edit/{id}':
    post:
      summary: edit theme
      tags:
        - THEME
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: theme _id
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  example: Dam
                description:
                  type: string
                  example: Dam for vizag
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
         
  '/project/theme/status/{id}':
    put:
      summary: active or inactive theme
      tags:
        - THEME
        
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: theme _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
  '/project/theme/list':
    get:
      summary: get theme list
      tags:
        - THEME
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest' 
          
          
  
          


#components
components:
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        status:
          type: boolean
          example: false
        error:
          type: string
      required:
        - status
        - error
