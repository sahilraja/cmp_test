openapi: 3.0.0
info:
  version: 1.0.0
  title: "CMP API's "

servers:
  - url: "http://localhost:3000"
  - url: " http://192.168.1.173:3000"

paths:
# user apis
  # Invite User
  "/user/create":
    post:
      security:
        - token: []
      summary: Invite users
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
                - role
              properties:
                name:
                  type: string
                  example: jeevan balla
                email:
                  type: string
                  example: Jeevan.balla@transerve.com
                role:
                  type: string
                  example: project manager
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId: 
                    type: string
                    example: 123456789
                      
        "400":
          $ref: "#/components/responses/BadRequest"
  # Add Grants        
  "/user/grants/add/{id}":
    post:
      security:
        - token: []
      summary: Add Grants to User
      tags:
        - USERS
      parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - projects
              properties:
                role:
                  type: string
                  example: project lead
                project:
                  type: array
                  items:
                    type: string
                  example:
                    - project id 1
                    - project id 2
                    - project id 3
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Roles added successfully
                      
        "400":
          $ref: "#/components/responses/BadRequest"
  # User Register
  "/user/register/{token}":
    post:
      summary: register user with that role
      tags:
        - USERS
      parameters:
          - in: path
            name: token
            schema:
              type: string
            required: true
            description: Token with user Details
      requestBody:
        required: true
        content:
          multipart/form-data::
            schema:
              type: object
              required:
                - name
                - phone
                - uploadPhoto
                - aboutme
                - password
              properties:
                name:
                  type: string
                  example: sai jeevan balla
                phone:
                  type: number
                  example: 7989238348
                uploadPhoto:
                  type: string
                  format: binary
                aboutme:
                  type: string
                  example: "project manager for transerve"
                password:
                  type: string
                  example: password
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "token":
                    type: boolean
                    example: kjabsdfviadvhoidjvodjv352kjtrenorg25t1

        "400":
          $ref: "#/components/responses/BadRequest"
  # user Login
  "/user/email/login":
    post:
      summary: login for user
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: jeevan.balla@transerve.com
                password:
                  type: string
                  example: password
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "token":
                    type: string
                    example: ebiudhvifjvp9WEI0923ONVJKehv9
        "400":
          $ref: "#/components/responses/BadRequest"
  # user Roles 
  "/user/me/role":
    get:
      security:
        - token: []
      summary: get list roles
      tags:
        - USERS
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: string
                    example:
                      - role 1
                      - role 2
                      - role 3

        "400":
          $ref: "#/components/responses/BadRequest"
  # user capabilities
  "/user/me/capabilities":
    get:
      security:
        - token: []
      summary: get user capapbilities
      tags:
        - USERS
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  capabilities:
                    type: array
                    items:
                      type: string
                    example:
                      - capability 1
                      - capability 2
                      - capability 3

        "400":
          $ref: "#/components/responses/BadRequest"
  # user details
  "/user/me/":
    get:
      security:
        - token: []
      summary: get user details
      tags:
        - USERS
      responses:
        "200":
          $ref: "#/components/responses/userME"
        "400":
          $ref: "#/components/responses/BadRequest"
  # user capabilities
  "/user/resend/invite/{id}":
    get:
      security:
        - token: []
      summary: register user with that role
      tags:
        - USERS
      parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: user id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: successfully mail was sent 

        "400":
          $ref: "#/components/responses/BadRequest"
  # forgot password
  "/user/forgot":
    post:
      summary: user forgot password
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: jeevan.balla@transerve.com
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "success":
                    type: string
                    example: successfully mail was sent
        "400":
          $ref: "#/components/responses/BadRequest"
  # user set password
  "/user/forgot/password/":
    post:
      summary: user set password
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: password
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "token":
                    type: string
                    example: urgre8t598gwvorjf8hfq439jfao
        "400":
          $ref: "#/components/responses/BadRequest"
  # user list
  "/user/list/":
    get:
      security:
        - token: []
      summary: get user details list
      tags:
        - USERS
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "list":
                    type: array
                    items: 
                      type: object
                      properties:
                        firstName: 
                          type: string
                          example: sai jeevan
                        secondName:
                          type: string
                          example: balla
                        role:
                          type: string
                          example: project managet
                        cities: 
                          type: array
                          items:
                            type: string
                          example:
                            - VIZAG-CODE
                            - HYD-CODE
                            - AMR-CODE
                        is_active: 
                          type: boolean
                          example: true

        "400":
          $ref: "#/components/responses/BadRequest"
  #user edit
  "/user/edit/{id}":
    post:
      security:
        - token: []
      summary: edit user
      tags:
        - USERS
      parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
              properties:
                name:
                  type: string
                  example: jeevan balla
                email:
                  type: string
                  example: Jeevan.balla@transerve.com
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "success":
                    type: object
                    properties:
                      name:
                        type: string
                        example: jeevan balla
                      email:
                        type: string
                        example: Jeevan.balla@transerve.com
                  

        "400":
          $ref: "#/components/responses/BadRequest"
  #user edit status
  "/user/status/{id}":
    put:
      security:
        - token: []
      summary: change user status
      tags:
        - USERS
      parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: user id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: inactive
                    description: inactive or active

        "400":
          $ref: "#/components/responses/BadRequest"


#project apis
  # create project code
  "/project/city/code/add":
    post:
      security:
        - token: []
      summary: add city code
      tags:
        - PROJECT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - citycode
                - cityname
              properties:
                citycode:
                  type: string
                  example: CITIIS-OR-BBR
                cityname:
                  type: string
                  example: vizag
                description:
                  type: string
                  example: project for develop schools
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: object
                    properties:
                      reference:
                        type: string
                        example: CITIIS-OR-BBR
                      projectName:
                        type: string
                        example: vizag
                      projectSummary:
                        type: string
                        example: project for develop schools
        "400":
          $ref: "#/components/responses/BadRequest"
  # edit project code
  "/project/city/code/edit/{id}":
    post:
      security:
        - token: []
      summary: edit city code
      tags:
        - PROJECT

      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: project id

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - citycode
                - cityname
              properties:
                citycode:
                  type: string
                  example: CITIIS-OR-BBR
                cityname:
                  type: string
                  example: vizag
                description:
                  type: string
                  example: project for develop schools
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: object
                    properties:
                      reference:
                        type: string
                        example: CITIIS-OR-BBR
                      projectName:
                        type: string
                        example: vizag
                      projectSummary:
                        type: string
                        example: project for develop schoolss
        "400":
          $ref: "#/components/responses/BadRequest"
  # project inactive
  "/project/city/code/status/{id}":
    put:
      security:
        - token: []
      summary: active or inactive city code
      tags:
        - PROJECT

      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: project id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: inactive
                    description: inactive or active
        "400":
          $ref: "#/components/responses/BadRequest"
  # project list
  "/project/city/code/list":
    get:
      security:
        - token: []
      summary: city code list
      tags:
        - PROJECT
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: string
                          example: project_id
                        referece: 
                          type: string
                          example: VIZAG-CODE
                          description: city codes
                      
        "400":
          $ref: "#/components/responses/BadRequest"


  "/role/list":
    get:
      security:
        - token: []
      summary: get role list
      tags:
        - ROLE
      
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items: 
                      type: object
                      properties:
                        scope: 
                          type: string
                          example: global
                        role: 
                          type: string
                          example: project lead
                        
                      
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/role/scope/list/{userid}":
    get:
      security:
        - token: []
      summary: get role list
      tags:
        - ROLE
      parameters:
        - in: path
          name: userid
          schema:
            type: string
          required: true
          description: project id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items: 
                      type: object
                      properties:
                        scope: 
                          type: string
                          example: global
                        role: 
                          type: string
                          example: project lead
                        
                      
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/tag/add":
    post:
      security:
        - token: []
      summary: add tag
      tags:
        - TAG

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tag
              properties:
                tag:
                  type: string
                  example: document
                description:
                  type: string
                  example: document for vizag project
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/tag/edit/{id}":
    post:
      security:
        - token: []
      summary: edit tag
      tags:
        - TAG

      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: tag _id

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  example: document
                description:
                  type: string
                  example: document for vizag project
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/tag/status/{id}":
    put:
      security:
        - token: []
      summary: active or inactive tag
      tags:
        - TAG

      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: tag _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/tag/list":
    get:
      security:
        - token: []
      summary: get tags list
      tags:
        - TAG
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/theme/add":
    post:
      security:
        - token: []
      summary: add theme
      tags:
        - THEME

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - theme
              properties:
                theme:
                  type: string
                  example: dams
                description:
                  type: string
                  example: dam for vizag
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/theme/edit/{id}":
    post:
      security:
        - token: []
      summary: edit theme
      tags:
        - THEME

      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: theme _id

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  example: Dam
                description:
                  type: string
                  example: Dam for vizag
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/theme/status/{id}":
    put:
      security:
        - token: []
      summary: active or inactive theme
      tags:
        - THEME

      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: theme _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"

  "/project/theme/list":
    get:
      security:
        - token: []
      summary: get theme list
      tags:
        - THEME
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "status:":
                    type: boolean
                    example: true
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/create":
    post:
      summary: Create Doc
      tags:
        - RESOURCES
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Annula Report
                description:
                  type: string
                  example: Dam for vizag
                themes:
                  type: array
                  items:
                    type: string
                  example: 
                    - 12346
                    - 12345
                tags:
                  type: array
                  items:
                    type: string
                  example: 
                    - 12346
                    - 12345    
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                      doc_id:
                        type: string
                        example: 343544
                      version_id:
                        type: string
                        example: 333345
        "400":
          $ref: "#/components/responses/BadRequest"
          

  "/docs/{id}/versions":
    get:
      summary: Get list of doc versions
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      type: object
                      properties:
                        version:
                          type: string
                          example: v1
                        status:
                          type: string
                          example: pending
                        id:
                          type: string
                          example: 123224
                        created_at:
                          type: string
                          example: "2019-08-26T15:17:29.912Z"
                        updated_at:
                          type: string
                          example: "2019-08-26T15:17:29.912Z"
                
                    
                        
                    
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/{id}/versions/{versionId}/submit":
    post:
      summary: Submit for Approval
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
        - in: path
          name: versionId
          schema:
            type: string
          required: true
          description: version _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                      doc_id:
                        type: string
                        example: 343544
                      version_id:
                        type: string
                        example: 353535
                      file_name:
                        type: string
                        example: filename.pdf
                  
        "400":
          $ref: "#/components/responses/BadRequest"

  "/docs/list":
    get:
      summary: list of documents
      tags:
        - RESOURCES
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        docId:
                          type: string
                          example: doc12345
                        name:
                          type: string
                          example: docName
                        uploadBy:
                          type: string
                          example: jeevan
                        role: 
                          type: string
                          example: project manager
                        tags:
                          type: array
                          items:
                            type: string
                            example: 
                              - tagId1234
                              - tagId5432
                        date:
                          type: string
                          example: "2019-08-26T15:17:29.912Z"
                  
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/me":
    get:
      summary: my list of documents
      tags:
        - RESOURCES
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        docId:
                          type: string
                          example: doc12345
                        name:
                          type: string
                          example: docName
                        status:
                          type: string
                          example: pending
                        tags:
                          type: array
                          items:
                            type: string
                            example: 
                              - tagId1234
                              - tagId5432
                        date:
                          type: string
                          example: "2019-08-26T15:17:29.912Z"
                  
        "400":
          $ref: "#/components/responses/BadRequest"
  
  "/docs/{id}/versions/create":
    post:
      summary: create a new copy
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
      
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                      fileName:
                        type: string
                        example: filename1
                      description:
                        type: string
                        example: this document for dams
                      themes:
                        type: array
                        items:
                          type: string
                        example:
                          - theme1
                          - theme1
                      tags:
                        type: array
                        items:
                          type: string
                        example:
                          - tag 1
                          - tag 2
                      versionId:
                        type: string
                        example: v3
                      docId:
                        type: string
                        example: doc123455
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/{id}/versions/{versionId}":
    post:
      summary: update version
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
        - in: path
          name: versionId
          schema:
            type: string
          required: true
          description: version _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_name:
                  type: string
                  example: Annula Report
                file_description:
                  type: string
                  example: Dam for vizag
                themes:
                  type: array
                  items:
                    type: string
                  example: 
                    - 12346
                    - 12345
                tags:
                  type: array
                  items:
                    type: string
                  example: 
                    - 12346
                    - 12345  
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                      fileName:
                        type: string
                        example: filename1
                      description:
                        type: string
                        example: this document for dams
                      themes:
                        type: array
                        items:
                          type: string
                        example:
                          - theme1
                          - theme1
                      tags:
                        type: array
                        items:
                          type: string
                        example:
                          - tag 1
                          - tag 2
                      versionId:
                        type: string
                        example: v3
                      docId:
                        type: string
                        example: doc123455
                  
        "400":
          $ref: "#/components/responses/BadRequest"
      
  "/docs/{id}/versions/{versionId}/publish":
    post:
      summary: approve and publish automatically
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
        - in: path
          name: versionId
          schema:
            type: string
          required: true
          description: version _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: document approved
                  
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/{id}/versions/{versionId}/reject":
    post:
      summary: reject specific version
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
        - in: path
          name: versionId
          schema:
            type: string
          required: true
          description: version _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: document rejected
                  
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/{id}/versions/{versionId}/file":
    get:
      summary: download the file from revision
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
        - in: path
          name: versionId
          schema:
            type: string
          required: true
          description: version _id
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: file downloading
        "400":
          $ref: "#/components/responses/BadRequest"
  
  "/docs/{id}/file":
    get:
      summary: download latest version
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: file downloading
                  
        "400":
          $ref: "#/components/responses/BadRequest"
        
  "/docs/{id}":
    get:
      summary: get Doc details
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id 
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                      fileName:
                        type: string
                        example: filename1
                      description:
                        type: string
                        example: this document for dams
                      themes:
                        type: array
                        items:
                          type: string
                        example:
                          - theme1
                          - theme1
                      tags:
                        type: array
                        items:
                          type: string
                        example:
                          - tag 1
                          - tag 2
                      versionId:
                        type: string
                        example: v3
                      docId:
                        type: string
                        example: doc123455
                  
        "400":
          $ref: "#/components/responses/BadRequest"
          
  "/docs/{id}/versions/get/{versionId}":
    get:
      summary: get particular version details
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
        - in: path
          name: versionId
          schema:
            type: string
          required: true
          description: doc _id 
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                      fileName:
                        type: string
                        example: filename1
                      description:
                        type: string
                        example: this document for dams
                      themes:
                        type: array
                        items:
                          type: string
                        example:
                          - theme1
                          - theme1
                      tags:
                        type: array
                        items:
                          type: string
                        example:
                          - tag 1
                          - tag 2
                      versionId:
                        type: string
                        example: v3
                      docId:
                        type: string
                        example: doc123455
                  
        "400":
          $ref: "#/components/responses/BadRequest"
      
      

#components
components:
  securitySchemes:
    token:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    userME:
      description: user schema
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userSchema"
  schemas:
  # error schema
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
  
  # user schema
    userSchema:
      type: object
      properties:
        firstName: 
          type: string
          example: sai jeevan
        secondName:
          type: string
          example: balla
        email:
          type: string
          example: jeevan.balla@transerve.com
        emailVerified:
          type: boolean
          example: false
        password: 
          type: string
          example: adhdbfverhf92nfn
          description: hashpassword
        phone:
          type: number
          example: 7989238348
        phoneVerified:
          type: boolean
          example: false
        aboutme: 
          type: string
          example: i am a project manager
        uploadPhoto:
          type: string
          example: https://amazonS3.com/user/profilepic
        is_active: 
          type: boolean
          example: true
  # project schema
    projectSchema:
      type: object
      properties:
        projectName: 
          type: string
          example: vizag schools develop
        city:
          type: string
          example: vizag
        projectSummary:
          type: string
          example: this project for de develop schools
        reference: 
          type: string
          example: VIZAG-CODE
        bannerImage:
          type: string
          example: https://amazonS3.com/project/banner
        maturationStartDate:
          type: array
          items:
            type: object
            properties:
              date: 
                type: string
                example: 22-1-2019
              created_at: 
                type: string
                example: 10-1-2019
              modified_at: 
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        thirdParyAggrementDate:
          type: array
          items:
            type: object
            properties:
              date: 
                type: string
                example: 22-1-2019
              created_at: 
                type: string
                example: 10-1-2019
              modified_at: 
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        thirdParyAggrementDocument:
          type: array
          items:
            type: object
            properties:
              date: 
                type: string
                example: https://Amazons3.com/thirdPary/Aggrement/Document
              created_at: 
                type: string
                example: 10-1-2019
              modified_at: 
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        maturationEndDate:
          type: array
          items:
            type: object
            properties:
              date: 
                type: string
                example: 22-1-2019
              created_at: 
                type: string
                example: 10-1-2019
              modified_at: 
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        projectCost:
            type: array
            items:
              type: object
              properties:
                date: 
                  type: number
                  example: 1000
                created_at: 
                  type: string
                  example: 10-1-2019
                modified_at: 
                  type: string
                  example: 15-1-2019 
                modified_by:
                  type: string
                  example: 12343567890
                  description: user id
        ciitiisGrants:
            type: array
            items:
              type: object
              properties:
                date: 
                  type: number
                  example: 1000
                created_at: 
                  type: string
                  example: 10-1-2019
                modified_at: 
                  type: string
                  example: 15-1-2019 
                modified_by:
                  type: string
                  example: 12343567890
                  description: user id
        fundsReleased:
            type: array
            items:
              type: object
              properties:
                date: 
                  type: number
                  example: 1000
                created_at: 
                  type: string
                  example: 10-1-2019
                modified_at: 
                  type: string
                  example: 15-1-2019 
                modified_by:
                  type: string
                  example: 12343567890
                  description: user id
        fundsUtilised:
            type: array
            items:
              type: object
              properties:
                date: 
                  type: number
                  example: 1000
                created_at: 
                  type: string
                  example: 10-1-2019
                modified_at: 
                  type: string
                  example: 15-1-2019 
                modified_by:
                  type: string
                  example: 12343567890
                  description: user id
        fundsUtilisedDocuments:
            type: array
            items:
              type: object
              properties:
                date: 
                  type: string
                  example: https://Amazons3.com/fundsUtilised/Documents
                created_at: 
                  type: string
                  example: 10-1-2019
                modified_at: 
                  type: string
                  example: 15-1-2019 
                modified_by:
                  type: string
                  example: 12343567890
                  description: user id
        themes: 
          type: string
          example: 12343567890
          description: theme id
        is_active: 
          type: boolean
          example: true

        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
