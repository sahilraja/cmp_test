openapi: 3.0.0
info:
  version: 1.0.0
  title: CMP-API
servers:
  - url: 'https://cmp-dev.transerve.com/api'
  - url: ' http://localhost:3000'
host: 'localhost:4000'
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /user/create:
    post:
      security:
        - token: []
      summary: Invite users
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
                - role
              properties:
                name:
                  type: string
                  example: jeevan balla
                email:
                  type: string
                  example: Jeevan.balla@transerve.com
                role:
                  type: string
                  example: project manager
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: 123456789
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/user/grants/add/{id}':
    post:
      security:
        - token: []
      summary: Add Grants to User
      tags:
        - USERS
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - projects
              properties:
                role:
                  type: string
                  example: project lead
                project:
                  type: array
                  items:
                    type: string
                  example:
                    - project id 1
                    - project id 2
                    - project id 3
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Roles added successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/user/register/{token}':
    post:
      summary: register user with that role
      tags:
        - USERS
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          description: Token with user Details
      requestBody:
        required: true
        content:
          'multipart/form-data:':
            schema:
              type: object
              required:
                - name
                - phone
                - uploadPhoto
                - aboutme
                - password
              properties:
                name:
                  type: string
                  example: sai jeevan balla
                phone:
                  type: number
                  example: 7989238348
                uploadPhoto:
                  type: string
                  format: binary
                aboutme:
                  type: string
                  example: project manager for transerve
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: boolean
                    example: kjabsdfviadvhoidjvodjv352kjtrenorg25t1
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/email/login:
    post:
      summary: login for user
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: pranay@citiis.com
                password:
                  type: string
                  example: Citiis@123
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: ebiudhvifjvp9WEI0923ONVJKehv9
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/me/role:
    get:
      security:
        - token: []
      summary: get list roles
      tags:
        - USERS
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: string
                    example:
                      - role 1
                      - role 2
                      - role 3
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/me/capabilities:
    get:
      security:
        - token: []
      summary: get user capapbilities
      tags:
        - USERS
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  capabilities:
                    type: array
                    items:
                      type: string
                    example:
                      - capability 1
                      - capability 2
                      - capability 3
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/me:
    get:
      security:
        - token: []
      summary: get user details
      tags:
        - USERS
      responses:
        '200':
          $ref: './schema/#responses/userME'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/user/resend/invite/{id}':
    get:
      security:
        - token: []
      summary: register user with that role
      tags:
        - USERS
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: successfully mail was sent
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/forgot:
    post:
      summary: user forgot password
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: jeevan.balla@transerve.com
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: successfully mail was sent
                  email:
                    type: string
                    example: email address
                  id:
                    type: string
                    example: userId
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/forgot/verify:
    post:
      summary: otp verification
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                email:
                  type: string
                  example: eswar@transerve.com
                otp:
                  type: string
                  example: 2452
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userData:
                    type: object
                    example: {}
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/forgot/setPassword:
    post:
      summary: user set password
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userData:
                    type: string
                    example: {}
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/list/:
    get:
      security:
        - token: []
      summary: get user details list
      tags:
        - USERS
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: sai jeevan balla
                        role:
                          type: string
                          example: program-coordinator
                        cities:
                          type: array
                          items:
                            type: string
                          example:
                            - VIZAG-CODE
                            - HYD-CODE
                            - AMR-CODE
                        is_active:
                          type: boolean
                          example: true
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/user/edit/{id}':
    post:
      security:
        - token: []
      summary: edit user
      tags:
        - USERS
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
              properties:
                name:
                  type: string
                  example: jeevan balla
                email:
                  type: string
                  example: Jeevan.balla@transerve.com
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      name:
                        type: string
                        example: jeevan balla
                      email:
                        type: string
                        example: Jeevan.balla@transerve.com
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/user/status/{id}':
    put:
      security:
        - token: []
      summary: change user status
      tags:
        - USERS
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: inactive
                    description: inactive or active
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/changeEmail:
    post:
      summary: change user email
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - id
              properties:
                email:
                  type: string
                  example: jeevan.balla@transerve.com
                password:
                  type: string
                  example: jeevan.balla@transerve.com
                id:
                  type: string
                  example: userId
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: successfully mail was sent
                  id:
                    type: string
                    example: userId
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/verifyEmail:
    post:
      summary: verify user email
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                otp:
                  type: string
                  example: 3536
                id:
                  type: string
                  example: userId
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: successfully mail verified
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/changePassword:
    post:
      summary: change user password
      tags:
        - USERS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - old_password
                - new_password
              properties:
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: successfully updated user password
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /project/city/code/add:
    post:
      security:
        - token: []
      summary: add city code
      tags:
        - PROJECT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - citycode
                - cityname
              properties:
                citycode:
                  type: string
                  example: CITIIS-OR-BBR
                cityname:
                  type: string
                  example: vizag
                description:
                  type: string
                  example: project for develop schools
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      reference:
                        type: string
                        example: CITIIS-OR-BBR
                      name:
                        type: string
                        example: vizag
                      summary:
                        type: string
                        example: project for develop schools
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/city/code/edit/{id}':
    post:
      security:
        - token: []
      summary: edit city code
      tags:
        - PROJECT
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: project id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - citycode
                - cityname
              properties:
                citycode:
                  type: string
                  example: CITIIS-OR-BBR
                cityname:
                  type: string
                  example: vizag
                description:
                  type: string
                  example: project for develop schools
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      reference:
                        type: string
                        example: CITIIS-OR-BBR
                      name:
                        type: string
                        example: vizag
                      summary:
                        type: string
                        example: project for develop schoolss
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/city/code/status/{id}': null
  /project/city/code/list: null
  /project/list:
    get:
      security:
        - token: []
      summary: get project list
      tags:
        - PROJECT
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: project_id
                        name:
                          type: string
                          example: howrah
                        city:
                          type: string
                          example: agarthala
                        maturationEndDate:
                          type: string
                          example: 22-1-2001
                        theme:
                          type: string
                          example: theme1
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/{id}':
    get:
      security:
        - token: []
      summary: get project list
      tags:
        - PROJECT
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: project id
      responses:
        '200':
          $ref: './schema/#responses/project'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/{id}/task/list':
    get:
      security:
        - token: []
      summary: get project list
      tags:
        - PROJECT
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: project id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Taskname
                        startDate:
                          type: string
                          example: 22-1-2001
                        endDate:
                          type: string
                          example: 23-2-2019
                        access:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                example: owner
                              role:
                                type: string
                                example: mentor
                              status:
                                type: string
                                example: PENDING
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/{id}/task/add': null
  /role/list:
    get:
      security:
        - token: []
      summary: get role list
      tags:
        - ROLE
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        scope:
                          type: string
                          example: global
                        role:
                          type: string
                          example: project lead
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/role/scope/list/{userid}':
    get:
      security:
        - token: []
      summary: get role list
      tags:
        - ROLE
      parameters:
        - in: path
          name: userid
          schema:
            type: string
          required: true
          description: project id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        scope:
                          type: string
                          example: global
                        role:
                          type: string
                          example: project lead
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /role/user/list/:
    get:
      security:
        - token: []
      summary: get role list
      tags:
        - ROLE
      parameters:
        - in: query
          name: role
          schema:
            type: string
          required: true
          description: role for get users list
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: string
                          example: project lead
                        users:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: userid212
                              firsrName:
                                type: string
                                example: james
                              secondName:
                                type: string
                                example: bond
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /project/tag/add:
    post:
      security:
        - token: []
      summary: add tag
      tags:
        - TAG
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tag
              properties:
                tag:
                  type: string
                  example: document
                description:
                  type: string
                  example: document for vizag project
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/tag/edit/{id}':
    post:
      security:
        - token: []
      summary: edit tag
      tags:
        - TAG
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: tag _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  example: document
                description:
                  type: string
                  example: document for vizag project
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/tag/status/{id}':
    put:
      security:
        - token: []
      summary: active or inactive tag
      tags:
        - TAG
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: tag _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /tag/list:
    get:
      security:
        - token: []
      summary: get tags list
      tags:
        - TAG
      parameters:
        - in: query
          name: search
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/countryCodes:
    get:
      security:
        - token: []
      summary: get list roles
      tags:
        - USERS
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                    example:
                      countryName: India
                      code: 91
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /project/theme/add:
    post:
      security:
        - token: []
      summary: add theme
      tags:
        - THEME
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - theme
              properties:
                theme:
                  type: string
                  example: dams
                description:
                  type: string
                  example: dam for vizag
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/theme/edit/{id}':
    post:
      security:
        - token: []
      summary: edit theme
      tags:
        - THEME
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: theme _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  example: Dam
                description:
                  type: string
                  example: Dam for vizag
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/project/theme/status/{id}':
    put:
      security:
        - token: []
      summary: active or inactive theme
      tags:
        - THEME
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: theme _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /project/theme/list:
    get:
      security:
        - token: []
      summary: get theme list
      tags:
        - THEME
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  'status:':
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /docs/create:
    post:
      security:
        - token: []
      summary: Create New Document
      tags:
        - RESOURCES
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Annula Report
                description:
                  type: string
                  example: Dam for vizag
                tags:
                  type: array
                  items:
                    type: string
                  example:
                    - 12346
                    - 12345
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  doc_id:
                    type: string
                    example: 343544
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/submit':
    put:
      security:
        - token: []
      summary: Submit Document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  doc_id:
                    type: string
                    example: 343544
                  file_name:
                    type: string
                    example: filename.pdf
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /docs/list:
    get:
      security:
        - token: []
      summary: list of documents
      tags:
        - RESOURCES
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        docId:
                          type: string
                          example: doc12345
                        name:
                          type: string
                          example: docName
                        uploadBy:
                          type: string
                          example: jeevan
                        role:
                          type: string
                          example: project manager
                        tags:
                          type: array
                          items:
                            type: string
                          example:
                            - tagId1234
                            - tagId5432
                        date:
                          type: string
                          example: '2019-08-26T15:17:29.912Z'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /docs/me:
    get:
      security:
        - token: []
      summary: my list of documents
      tags:
        - RESOURCES
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        docId:
                          type: string
                          example: doc12345
                        name:
                          type: string
                          example: docName
                        tags:
                          type: array
                          items:
                            type: string
                          example:
                            - tagId1234
                            - tagId5432
                        date:
                          type: string
                          example: '2019-08-26T15:17:29.912Z'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /docs/shared/me:
    get:
      security:
        - token: []
      summary: document list shared with me
      tags:
        - RESOURCES
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        docId:
                          type: string
                          example: doc12345
                        name:
                          type: string
                          example: docName
                        tags:
                          type: array
                          items:
                            type: string
                          example:
                            - tagId1234
                            - tagId5432
                        date:
                          type: string
                          example: '2019-08-26T15:17:29.912Z'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/file':
    get:
      security:
        - token: []
      summary: download latest version
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: file downloading
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
    post:
      security:
        - token: []
      summary: Change or create a New file for this version
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upfile:
                  type: string
                  format: binary
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  doc_id:
                    type: string
                    example: 343544
                  file_name:
                    type: string
                    example: filename.pdf
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}':
    get:
      security:
        - token: []
      summary: get Doc details
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileName:
                    type: string
                    example: filename1
                  description:
                    type: string
                    example: this document for dams
                  themes:
                    type: array
                    items:
                      type: string
                    example:
                      - theme1
                      - theme1
                  tags:
                    type: array
                    items:
                      type: string
                    example:
                      - tag 1
                      - tag 2
                  versionId:
                    type: string
                    example: v3
                  docId:
                    type: string
                    example: doc123455
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
    post:
      security:
        - token: []
      summary: update document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Annula Report
                description:
                  type: string
                  example: Dam for vizag
                tags:
                  type: array
                  items:
                    type: string
                  example:
                    - 12346
                    - 12345
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Annula Report
                  description:
                    type: string
                    example: Dam for vizag
                  tags:
                    type: array
                    items:
                      type: string
                    example:
                      - 12346
                      - 12345
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/collaborator/add':
    post:
      security:
        - token: []
      summary: Add collaborators to the group
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collaborators:
                  type: array
                  items:
                    type: string
                  example:
                    - 12346
                    - 12345
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: added collaborators successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/collaborator/remove':
    put:
      security:
        - token: []
      summary: Remove collaborators to the group
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collaborators:
                  type: array
                  items:
                    type: string
                  example:
                    - 12346
                    - 12345
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: remove collaborators successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/viewer/add':
    post:
      security:
        - token: []
      summary: Add viewers to the group
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                viewers:
                  type: array
                  items:
                    type: string
                  example:
                    - 12346
                    - 12345
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: added viewers successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/viewer/remove':
    put:
      security:
        - token: []
      summary: Remove viewer to the group
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collaborators:
                  type: array
                  items:
                    type: string
                  example:
                    - 12346
                    - 12345
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: remove viewers successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/collaborator/list':
    get:
      security:
        - token: []
      summary: Collaborators list for document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  collaboratores:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/viewer/list':
    get:
      security:
        - token: []
      summary: viewers list for document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  viewers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/share':
    post:
      security:
        - token: []
      summary: doc share to users
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
        - in: query
          name: role
          schema:
            type: string
          required: true
          description: collaborator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    type: object
                    $ref: './schema/#/responses/schemas/DocPermissions'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: added successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/share/list':
    get:
      security:
        - token: []
      summary: shared users list
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: './schema/#/responses/schemas/DocPermissions'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/share/{type}/{userId}/edit':
    put:
      security:
        - token: []
      summary: edit user permission
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: user Id
        - in: query
          name: role
          schema:
            type: string
          required: true
          description: owner
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: group
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: added successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/share/{type}/{userId}/remove':
    delete:
      security:
        - token: []
      summary: edit user permission
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: user Id
        - in: query
          name: role
          schema:
            type: string
          required: true
          description: owner
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: user
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: added successfully
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /user/suggestion:
    get:
      security:
        - token: []
      summary: shared users list
      tags:
        - RESOURCES
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: true
          description: sarch name
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: './schema/#/responses/schemas/DocPermissions'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/capabilities':
    get:
      security:
        - token: []
      summary: get Doc Capabilities for user
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  capabilities:
                    type: array
                    items:
                      type: string
                    example:
                      - capabilitiy 1
                      - capability 2
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/publish':
    post:
      security:
        - token: []
      summary: publish a document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: './schema/#/responses/schemas/Document'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/unpublish':
    put:
      security:
        - token: []
      summary: unPublish a document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: './schema/#/responses/schemas/Document'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  '/docs/{id}/replace/{replaceDocId}':
    post:
      security:
        - token: []
      summary: Replace a document
      tags:
        - RESOURCES
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: doc _id
        - in: path
          name: replaceDocId
          schema:
            type: string
          required: true
          description: replace doc _id
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: './schema/#/responses/schemas/Document'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /docs/publish/list:
    get:
      security:
        - token: []
      summary: Publish doc list
      tags:
        - RESOURCES
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: './schema/#/responses/schemas/Document'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
  /docs/search:
    get:
      security:
        - token: []
      summary: Publish doc list
      tags:
        - RESOURCES
      parameters:
        - in: query
          name: filter
          schema:
            type: string
          required: true
          description: '#tagName or documentName'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: './schema/#/responses/schemas/Document'
        '400':
          $ref: '#/definitions/ErrorResponse/BadRequest'
definitions:
  ErrorResponse:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema: &ref_0
            type: object
            properties:
              error:
                type: string
            required:
              - error
    Error: *ref_0
components:
  securitySchemes:
    token:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
    userME: &ref_1
      type: object
      properties:
        name:
          type: string
          example: sai jeevan balla
        email:
          type: string
          example: jeevan.balla@transerve.com
        emailVerified:
          type: boolean
          example: false
        password:
          type: string
          example: adhdbfverhf92nfn
          description: hashpassword
        phone:
          type: number
          example: 7989238348
        phoneVerified:
          type: boolean
          example: false
        aboutme:
          type: string
          example: i am a project manager
        uploadPhoto:
          type: string
          example: 'https://amazonS3.com/user/profilepic'
        is_active:
          type: boolean
          example: true
    project: &ref_2
      type: object
      properties:
        name:
          type: string
          example: vizag schools develop
        city:
          type: string
          example: vizag
        summary:
          type: string
          example: this project for de develop schools
        reference:
          type: string
          example: VIZAG-CODE
        bannerImage:
          type: string
          example: 'https://amazonS3.com/project/banner'
        maturationStartDate:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                example: 22-1-2019
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        thirdParyAggrementDate:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                example: 22-1-2019
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        thirdParyAggrementDocument:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                example: 'https://Amazons3.com/thirdPary/Aggrement/Document'
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        maturationEndDate:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                example: 22-1-2019
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        projectCost:
          type: array
          items:
            type: object
            properties:
              date:
                type: number
                example: 1000
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        ciitiisGrants:
          type: array
          items:
            type: object
            properties:
              date:
                type: number
                example: 1000
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        fundsReleased:
          type: array
          items:
            type: object
            properties:
              date:
                type: number
                example: 1000
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        fundsUtilised:
          type: array
          items:
            type: object
            properties:
              date:
                type: number
                example: 1000
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        fundsUtilisedDocuments:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                example: 'https://Amazons3.com/fundsUtilised/Documents'
              created_at:
                type: string
                example: 10-1-2019
              modified_at:
                type: string
                example: 15-1-2019
              modified_by:
                type: string
                example: 12343567890
                description: user id
        themes:
          type: string
          example: 12343567890
          description: theme id
        is_active:
          type: boolean
          example: true
    userSchema: *ref_1
    projectSchema: *ref_2

